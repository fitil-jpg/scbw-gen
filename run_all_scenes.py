#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É –≤—Å—ñ—Ö StarCraft —Å—Ü–µ–Ω
"""
import subprocess
import sys
import os
import time

def run_scene(script_name, description):
    """–ó–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∏ –∑ –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è–º —á–∞—Å—É"""
    print(f"\nüé¨ {description}")
    print("=" * 50)
    
    start_time = time.time()
    
    try:
        result = subprocess.run([
            "blender", "--background", "--python", script_name
        ], capture_output=True, text=True)
        
        end_time = time.time()
        duration = end_time - start_time
        
        if result.returncode == 0:
            print(f"‚úÖ {description} - –£—Å–ø—ñ—à–Ω–æ! (–ß–∞—Å: {duration:.1f}—Å)")
            return True
        else:
            print(f"‚ùå {description} - –ü–æ–º–∏–ª–∫–∞!")
            if result.stderr:
                print("–ü–æ–º–∏–ª–∫–∞:", result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå {description} - –í–∏–Ω—è—Ç–æ–∫: {e}")
        return False

def main():
    print("üöÄ StarCraft Scene Generation Pipeline")
    print("=" * 60)
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    os.makedirs("renders/blender", exist_ok=True)
    
    scenes = [
        ("test_blender_simple.py", "–¢–µ—Å—Ç–æ–≤–∞ —Å—Ü–µ–Ω–∞ (–∫—É–±)"),
        ("create_starcraft_scene.py", "StarCraft —Å—Ü–µ–Ω–∞ (–ø–æ–≤–Ω–∞)"),
        ("create_advanced_starcraft_scene.py", "–†–æ–∑—à–∏—Ä–µ–Ω–∞ —Å—Ü–µ–Ω–∞ (–∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é)")
    ]
    
    successful = 0
    total_time = 0
    
    for script, description in scenes:
        start_time = time.time()
        success = run_scene(script, description)
        end_time = time.time()
        
        if success:
            successful += 1
            total_time += (end_time - start_time)
    
    # –ü—ñ–¥—Å—É–º–æ–∫
    print(f"\nüìä –ü—ñ–¥—Å—É–º–æ–∫")
    print("=" * 30)
    print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ: {successful}/{len(scenes)} —Å—Ü–µ–Ω")
    print(f"‚è±Ô∏è –ó–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å: {total_time:.1f} —Å–µ–∫—É–Ω–¥")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
    print(f"\nüìÅ –°—Ç–≤–æ—Ä–µ–Ω—ñ —Ñ–∞–π–ª–∏:")
    if os.path.exists("renders/blender/"):
        files = os.listdir("renders/blender/")
        for file in sorted(files):
            if file.endswith('.png'):
                file_path = os.path.join("renders/blender", file)
                size = os.path.getsize(file_path)
                print(f"  üìÑ {file} ({size/1024/1024:.1f} MB)")
    
    if successful == len(scenes):
        print(f"\nüéâ –í—Å—ñ —Å—Ü–µ–Ω–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ —É—Å–ø—ñ—à–Ω–æ!")
        print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤: renders/blender/")
    else:
        print(f"\n‚ö†Ô∏è –î–µ—è–∫—ñ —Å—Ü–µ–Ω–∏ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏")
    
    return 0 if successful == len(scenes) else 1

if __name__ == "__main__":
    sys.exit(main())